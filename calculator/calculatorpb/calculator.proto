syntax = "proto3";

package calculatorpb;

message SumRequest {
  int32 first_number = 1;
  int32 second_number = 2;
}

message SumResponse {
  int32 sum_result = 1;
}

message PrimeNumberDecompositionRequest {
  int64 number = 1;
}

message PrimeNumberDecompositionResponse {
  int64 prime_factor = 1;
}

message ComputeAverageRequest {
  int32 number = 1;
}

message ComputeAverageResponse {
  int32 result = 1;
}

message FindMaximumRequest {
  int32 number = 1;
}

message FindMaximumResponse {
  int32 result = 1;
}

message SquareRootRequest {
  int32 number = 1;
}

message SquareRootResponse {
  double number_root = 1;
}

service CalculatorService {
  rpc Sum(SumRequest) returns (SumResponse) {};

  rpc PrimeNumberDecomposition(PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse) {};
  rpc ComputeAverage(stream ComputeAverageRequest) returns(ComputeAverageResponse) {};
  rpc FindMaximum(stream FindMaximumRequest) returns(stream FindMaximumResponse) {};

  // this will throw an exception, INVALID_ARGUMENT for negative number
  rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {}
}